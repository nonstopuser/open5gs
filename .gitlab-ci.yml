stages:
  - test
  - deploy
  - module-pipelines

include:
  - template: Security/SAST.gitlab-ci.yml

variables:
  SAST_EXCLUDED_ANALYZERS: "brakeman,flawfinder,nodejs-scan,semgrep,spotbugs"

build-docker-images:
  stage: module-pipelines
  trigger:
    include:
      - "/openms/.gitlab-ci.yml"
    strategy: depend
  except:
    changes:
      - openms/**/*
      - .gitlab-ci.yml

deploy-docker-compose:
  stage: deploy
  image: alpine
  # variables:
  #   SPRING_CLOUD_VAULT_ENABLED: "false"
  when: manual
  before_script:
    - apk add openssh-client bash
    - eval $(ssh-agent -s)
    - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$(ssh-keyscan -t ssh-rsa ${VM_IP_ADDRESS})" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp openms/docker/docker-compose.yml ${DEV_USER}@${VM_IP_ADDRESS}:/home/${DEV_USER}/docker-compose.yml
    - scp docs/assets/webui/mongo-init.js ${DEV_USER}@${VM_IP_ADDRESS}:/home/${DEV_USER}/mongo-init.js
    - > 
      ssh ${DEV_USER}@${VM_IP_ADDRESS}
      "export "DEV_USER=${DEV_USER}";
      export "CI_REGISTRY_USER=${CI_REGISTRY_USER}";
      export "CI_REGISTRY_PASSWORD=${CI_REGISTRY_PASSWORD}";
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD 
      && docker compose pull
      && docker compose up --detach --force-recreate --remove-orphans webui"