# pipeline for frontend
stages:
  - build
#  - test

#include:
#  - template: Security/SAST.gitlab-ci.yml

#variables:
#  SAST_EXCLUDED_ANALYZERS: "spotbugs,gosec"

#default:
#  cache:
#    key: "build-code-$CI_COMMIT_REF_SLUG"
#    paths:
#      - install/bin/open5gs-*

build-code:
  stage: build
  image: ubuntu:20.04
  script:
    - sudo apt update
    - >
      sudo apt install -y python3-pip python3-setuptools python3-wheel ninja-build \
      build-essential flex bison git cmake libsctp-dev libgnutls28-dev libgcrypt-dev \
      libssl-dev libidn11-dev libmongoc-dev libbson-dev libyaml-dev libnghttp2-dev \
      libmicrohttpd-dev libcurl4-gnutls-dev libnghttp2-dev libtins-dev libtalloc-dev meson
    - meson build --prefix=`pwd`/install && meson --reconfigure -Dmetrics_impl=prometheus build
    - ninja -C build
    - cd build
    - meson test -v
    - ninja install
    - ll install/etc/open5gs/*
#  cache:
#    key: "builc-code-$CI_COMMIT_REF_SLUG"
#    paths:
#      - install/bin/open5gs-*

#build-dockerfile:
#  stage: build
#  image: docker:24.0.6-dind
#  services:
#    - docker: 24.0.6-dind
#  variables:
#    DOCKER_TLS_CERTDIR: ""
#  before_script:
#    - until docker info; do sleep 1; done
#    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
#  script:
#    - >
#      docker build
#      --tag ${CI_REGISTRY_IMAGE}/open5gs-ee:${OPEN5GS_VERSION}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}
#      .
#    - docker push ${CI_REGISTRY_IMAGE}/open5gs-ee:${OPEN5GS_VERSION}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}
#  cache:
#    key: "builc-code-$CI_COMMIT_REF_SLUG"
#    paths:
#      - install/bin/open5gs-*
